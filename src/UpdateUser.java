
import dao.ConnectionP;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author MARIEM
 */
public class UpdateUser extends javax.swing.JFrame {
     private String emailPattern = "^[a-zA-Z0-9]+[@]+[a-zA-Z0-9]+[.]+[a-zA-Z0-9]+$";
     private String mobileNumberPatter = "^[0-9]*$";

    /**
     * Creates new form UpdateUser
     */
    public UpdateUser() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtusername = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        ComboUserRole = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDOB = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtemail = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        mobileNumber = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtaddress = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("Modifier User");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 16, 246, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 850, 10));

        jButton1.setIcon(new javax.swing.ImageIcon("C:\\Program Files\\NetBeans-21\\Pharmacy Management System Images & Pattern\\close.png")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(824, 0, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("username");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(274, 118, -1, -1));

        txtusername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtusernameActionPerformed(evt);
            }
        });
        getContentPane().add(txtusername, new org.netbeans.lib.awtextra.AbsoluteConstraints(357, 118, 250, -1));

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon("C:\\Program Files\\NetBeans-21\\Pharmacy Management System Images & Pattern\\search.png")); // NOI18N
        jButton2.setText("Rechercher");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(679, 116, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("User Role");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 200, 78, -1));

        ComboUserRole.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ComboUserRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Pharmacist" }));
        getContentPane().add(ComboUserRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 228, 236, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Name");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 268, 58, -1));

        txtname.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        getContentPane().add(txtname, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 296, 236, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("date_naissance");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 330, 97, -1));

        txtDOB.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtDOB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDOBActionPerformed(evt);
            }
        });
        getContentPane().add(txtDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 358, 236, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Email");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(391, 200, 58, -1));

        txtemail.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtemail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtemailActionPerformed(evt);
            }
        });
        getContentPane().add(txtemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(391, 228, 250, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Mobile Number");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(391, 268, 100, -1));

        mobileNumber.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        mobileNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileNumberActionPerformed(evt);
            }
        });
        getContentPane().add(mobileNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(391, 296, 250, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("Address");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(391, 330, 58, -1));

        txtaddress.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtaddress.setToolTipText("");
        txtaddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtaddressActionPerformed(evt);
            }
        });
        getContentPane().add(txtaddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(391, 358, 250, -1));

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon("C:\\Program Files\\NetBeans-21\\Pharmacy Management System Images & Pattern\\save.png")); // NOI18N
        jButton3.setText("Enregistrer");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(391, 420, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtemailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtemailActionPerformed

    private void mobileNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mobileNumberActionPerformed

    private void txtaddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtaddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtaddressActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         setVisible(false);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
      /**   int checkUserExist = 0;
    String username = txtusername.getText();
    if(username.equals("")) {
        JOptionPane.showMessageDialog(null,"Le champ du nom d'utilisateur est requis");
    } else {
        SimpleDateFormat dFormat = new SimpleDateFormat("yyyy-MM-dd");  
        try {
            Connection con = ConnectionP.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM appuser WHERE username = '" + username + "'");
            while (rs.next()) {
                txtusername.setEditable(false);
                checkUserExist = 1;
                txtname.setText(rs.getString("name"));
                mobileNumber.setText(rs.getString("mobileNumber"));
                txtemail.setText(rs.getString("email"));
                txtaddress.setText(rs.getString("adrress"));
                
                // Get date of birth from database
                Date dobDate = rs.getDate("dob");
                if (dobDate != null) {
                    txtDOB.setText(dFormat.format(dobDate));
                }
                
                if(rs.getString("userRole").equals("Admin")) {
                    ComboUserRole.setSelectedItem("Admin");
                } else {
                    ComboUserRole.setSelectedItem("Pharmacist");
                }
            }
            
            rs.close();
            st.close();
            con.close();
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        if(checkUserExist == 0) {
            JOptionPane.showMessageDialog(null,"Nom d'utilisateur n'existe pas");
        }
    }*/
        
        
      int checkUserExist = 0;
        String username = txtusername.getText();
        if(username.equals("")){
            JOptionPane.showMessageDialog(null,"username filed is required");
            
        }else{
            SimpleDateFormat dFormat = new SimpleDateFormat("yyyy-MM-dd");
            try{
                Connection con = ConnectionP.getCon();
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery("SELECT * FROM appuser WHERE username = '" + username + "'");
                while (rs.next()) {
                    txtusername.setEditable(false);
                    checkUserExist = 1;
                    txtname.setText("name");
                    mobileNumber.setText(rs.getString("mobileNumber"));
                    txtemail.setText(rs.getString("email"));
                    txtaddress.setText(rs.getString("adrress"));
                  //  DOB= rs.getString("dob");
                    //if(DOB !=""){
                       // try{
                            
                           // Date dateOfBirth = dFormat.parse(DOB);
                   Date dobDate = rs.getDate("dob");
                   String dob = "";
                if (dobDate != null) {
                      try{
                          txtDOB.setText(dFormat.format(dobDate));
                            
    
                            
                        }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
                                
                        
                    }
                   
                    if(rs.getString("userRole").equals("Admin")){
                         ComboUserRole.setSelectedItem("Admin");
                      //  ComboUserRole.removeAllItems();
                         //ComboUserRole.addItem("Admin");
                         // ComboUserRole.addItem("Pharmacist");
                          
                        
                    }else{
                         ComboUserRole.setSelectedItem("Pharmacist");
                       //  ComboUserRole.removeAllItems();
                        // ComboUserRole.addItem("Admin");
                         // ComboUserRole.addItem("Pharmacist");
                        
                    }
                    
                    
                }
                
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
            if(checkUserExist == 0){
                JOptionPane.showMessageDialog(null,"Username n'existe pas");
                
            }
        }
        
        /**  int checkUserExist = 0;
        String username = txtusername.getText();
        if(username.equals("")) {
            JOptionPane.showMessageDialog(null,"username filed is required");
        } else {
            SimpleDateFormat dFormat = new SimpleDateFormat("dd-MM-yyyy");
            try {
                Connection con = ConnectionP.getCon();
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery("SELECT * FROM appuser WHERE username = '" + username + "'");
                while (rs.next()) {
                    txtusername.setEditable(false);
                    checkUserExist = 1;
                    txtname.setText(rs.getString("name"));
                    mobileNumber.setText(rs.getString("mobileNumber"));
                    txtemail.setText(rs.getString("email"));
                    txtaddress.setText(rs.getString("adrress"));
                    
                    // Get date of birth from database
                    Date dobDate = rs.getDate("dob");
                    if (dobDate != null) {
                        txtDOB.setText(dFormat.format(dobDate));
                    }
                    
                    if(rs.getString("userRole").equals("Admin")) {
                        ComboUserRole.removeAllItems();
                        ComboUserRole.addItem("Admin");
                        ComboUserRole.addItem("Pharmacist");
                    } else {
                        ComboUserRole.removeAllItems();
                        ComboUserRole.addItem("Admin");
                        ComboUserRole.addItem("Pharmacist");
                    }
                }
                
                rs.close();
                st.close();
                con.close();
            } catch(Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            
            if(checkUserExist == 0) {
                JOptionPane.showMessageDialog(null,"Username n'existe pas");
            }
        }*/
         
                      
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtusernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtusernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtusernameActionPerformed

    private void txtDOBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDOBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDOBActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
  /**     String userRole = (String) ComboUserRole.getSelectedItem();
         String name  = txtname.getText();
         SimpleDateFormat dFormat = new SimpleDateFormat("yyyy-MM-dd");
            Date date = dateDob.getDate();
        String dob = "";
        if (date != null) {
            dob = dFormat.format(dateDob.getDate());
         
                }
              String mobileNumberr = mobileNumber.getText();
               String   email   =  txtemail.getText();
                 String adrress  = txtaddress.getText();
                 String username = txtusername.getText();
                 if(name.equals("")){
                     JOptionPane.showMessageDialog(null,"name is required");
                     
                 }else if (dob.equals("")){
                     JOptionPane.showMessageDialog(null,"Date naissance is required");
               
                 }  else if (mobileNumberr.equals("")){
                     JOptionPane.showMessageDialog(null,"mobileNumber is required");
                 }
                 else if (!mobileNumberr.matches(mobileNumberPatter) || mobileNumberr.length()!=10 ){
                     JOptionPane.showMessageDialog(null,"mobileNumber invalide");
                 }
                 else if (email.equals("")){
                     JOptionPane.showMessageDialog(null,"email is required");
                 } else if (!email.matches(emailPattern)  ){
                     JOptionPane.showMessageDialog(null,"email invalide");
                 }else if (userRole.equals("")){
                     JOptionPane.showMessageDialog(null,"userRole is required");
                 }
                 else if (adrress.equals("")){
                     JOptionPane.showMessageDialog(null,"adrress is required");
                     }  else if (username.equals("")){
                     JOptionPane.showMessageDialog(null,"username is required");
                 
                 }else{
                     try{
                              Connection con = ConnectionP.getCon();
                    String query = "UPDATE appuser(userRole=?, name=?, dob=?, mobileNumber=?, email=?,adrress=? where  username=?";
                    PreparedStatement pst = con.prepareStatement(query);
                    pst.setString(1, userRole);
                    pst.setString(2, name);
                    pst.setString(3, dob); // Format de la date au format "année-mois-jour"
                    pst.setString(4, mobileNumberr);
                    pst.setString(5,email);
                    pst.setString(6,adrress);
                    pst.setString(7,username);
                     pst.executeUpdate();
            
                 JOptionPane.showMessageDialog(null, "User modifier avec succès");
                setVisible(false);
                 new UpdateUser().setVisible(true);
                 }catch(Exception e){
                    
                 JOptionPane.showMessageDialog(null, e);}
                 }*/
       String userRole = (String) ComboUserRole.getSelectedItem();
    String name = txtname.getText();
    SimpleDateFormat dFormat = new SimpleDateFormat("yyyy-MM-dd");
    String dob = txtDOB.getText();
    String mobilenumber = mobileNumber.getText();
    String email = txtemail.getText();
    String address = txtaddress.getText();
    String username = txtusername.getText();
    
    if (name.equals("") || dob.equals("") || mobilenumber.equals("") || email.equals("") || address.equals("") || username.equals("")) {
        JOptionPane.showMessageDialog(null, "Tous les champs sont requis");
    } else {
        try {
            Connection con = ConnectionP.getCon();
            String query = "UPDATE appuser SET userRole=?, name=?, dob=?, mobileNumber=?, email=?, adrress=? WHERE username=?";
            PreparedStatement pst = con.prepareStatement(query);
            pst.setString(1, userRole);
            pst.setString(2, name);
            pst.setString(3, dob); // Format de la date au format "année-mois-jour"
            pst.setString(4, mobilenumber);
            pst.setString(5, email);
            pst.setString(6, address);
            pst.setString(7, username);
            
            pst.executeUpdate();
            
            JOptionPane.showMessageDialog(null, "Utilisateur modifié avec succès");
            setVisible(false);
            new UpdateUser().setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
       
    }//GEN-LAST:event_jButton3ActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentShown

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboUserRole;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField mobileNumber;
    private javax.swing.JTextField txtDOB;
    private javax.swing.JTextField txtaddress;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtusername;
    // End of variables declaration//GEN-END:variables
}
